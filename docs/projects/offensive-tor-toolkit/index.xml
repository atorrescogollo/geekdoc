<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Offensive Tor Toolkit on atorrescogollo - Blog &amp; Wikis</title>
    <link>/geekdoc/projects/offensive-tor-toolkit/</link>
    <description>Recent content in Offensive Tor Toolkit on atorrescogollo - Blog &amp; Wikis</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="/geekdoc/projects/offensive-tor-toolkit/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting Started</title>
      <link>/geekdoc/projects/offensive-tor-toolkit/getting_started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/geekdoc/projects/offensive-tor-toolkit/getting_started/</guid>
      <description>Offensive Tor Toolkit is written in Golang, a language that stands out for its good performance. Offensive Tor Toolkit makes use of the following libraries:
 ipsn/go-libtor: Self-contained Tor from Go. cretz/bine: Go API for using and controlling Tor.  Preparation In order to make the compilation, you can build a docker image as follows:
$ docker build -t offensive-tor-toolkit . $ docker run -v $(pwd)/dist/:/dist/ -it --rm offensive-tor-toolkit At this moment, Offensive Tor Toolkit tools are available in your dist/ directory.</description>
    </item>
    
    <item>
      <title>reverse-shell-over-tor</title>
      <link>/geekdoc/projects/offensive-tor-toolkit/reverse-shell-over-tor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/geekdoc/projects/offensive-tor-toolkit/reverse-shell-over-tor/</guid>
      <description>This tool allows the victim to connect to the Hidden Service of the attacker. If the attacker starts a netcat handler, it will give him a shell session.
Some parameters need to be set:
$ ./reverse-shell-over-tor -h Usage of reverse-shell-over-tor: -listener string Listener address. Format: &amp;lt;ONION_ADDR&amp;gt;:&amp;lt;PORT&amp;gt; -reverse-shell-program string Program to execute on reverse-shell (default &amp;quot;/bin/sh&amp;quot;) -timeout int Timeout in seconds for Tor setup (default 180) </description>
    </item>
    
    <item>
      <title>hidden-bind-shell</title>
      <link>/geekdoc/projects/offensive-tor-toolkit/hidden-bind-shell/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/geekdoc/projects/offensive-tor-toolkit/hidden-bind-shell/</guid>
      <description>This tool allows the victim to set up a new Hidden Service that offers shells to new connections. Then, the attacker can connect to the Hidden Service to receive a shell session.
Some parameters need to be set:
$ ./hidden-bind-shell -h Usage of hidden-bind-shell: -bind-shell-program string Program to execute on bind-shell (default &amp;quot;/bin/sh&amp;quot;) -data-dir string Where Tor data is stored. If not defined, a directory is created -hiddensrvport int Tor hidden service port where bind-shell will be started (default 80) -timeout int Timeout in seconds for Tor setup (default 180) </description>
    </item>
    
    <item>
      <title>hidden-portforwarding</title>
      <link>/geekdoc/projects/offensive-tor-toolkit/hidden-portforwarding/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/geekdoc/projects/offensive-tor-toolkit/hidden-portforwarding/</guid>
      <description>This tool allows the victim to set up a new Hidden Service that forwards TCP traffic to a TCP port. Then, the attacker can access the Hidden Service to access the target.
 If the target is a SOCKS proxy, the attacker can pivot easily through the victim to internal networks.
 Some parameters need to be set:
$ ./hidden-portforwarding -h Usage of hidden-portforwarding: -data-dir string Where Tor data is stored.</description>
    </item>
    
    <item>
      <title>tcp2tor-proxy</title>
      <link>/geekdoc/projects/offensive-tor-toolkit/tcp2tor-proxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/geekdoc/projects/offensive-tor-toolkit/tcp2tor-proxy/</guid>
      <description>This tool allows the victim to set up a service that forwards TCP traffic to a Hidden Service. Then, an victim inside an internal network can access a Hidden Service pivoting over the victim that executes this tool.
Some parameters need to be set:
$ ./tcp2tor-proxy -h Usage of tcp2tor-proxy: -listen string TCP Socket to listen on. Format: [&amp;lt;IP&amp;gt;]:&amp;lt;PORT&amp;gt; (default &amp;quot;127.0.0.1:60101&amp;quot;) -onion-forward string Hidden service to proxy. Format: &amp;lt;ONION&amp;gt;:&amp;lt;PORT&amp;gt;. This parameter is required -timeout int Timeout in seconds for Tor setup (default 180) </description>
    </item>
    
  </channel>
</rss>
