'use strict';(function(){const indexCfg={};indexCfg.doc={id:'id',field:['title','content'],store:['title','href','parent'],};const index=FlexSearch.create(indexCfg);window.geekdocSearchIndex=index;index.add({'id':0,'href':'/geekdoc/posts/','title':"Blog",'parent':"",'content':""});index.add({'id':1,'href':'/geekdoc/projects/offensive-tor-toolkit/getting_started/','title':"Getting Started",'parent':"Offensive Tor Toolkit",'content':"Offensive Tor Toolkit is written in Golang, a language that stands out for its good performance. Offensive Tor Toolkit makes use of the following libraries:\n ipsn/go-libtor: Self-contained Tor from Go. cretz/bine: Go API for using and controlling Tor.  Preparation In order to make the compilation, you can build a docker image as follows:\n$ docker build -t offensive-tor-toolkit . $ docker run -v $(pwd)/dist/:/dist/ -it --rm offensive-tor-toolkit At this moment, Offensive Tor Toolkit tools are available in your dist/ directory.\n You can notice that every single tool has its base64 associated file. This can be useful when transferring the file in text format.\n Once Offensive Tor Toolkit tools are compiled, you can upload the needed file to the victim.\n In order to preserve your anonymity, you can use a temporary file upload service such as Uguu, file.io or FILE.re.\n Here are the main tools:\n reverse-shell-over-tor: Victim sends a Reverse Shell to a Hidden Service. hidden-bind-shell: Victim starts up a Hidden Service with a Bind Shell. hidden-portforwarding: Victim starts a Hidden Service that forwards traffic. Useful for pivoting. tcp2tor-proxy: Victim allows another victim to access a Hidden Service through it. Useful to gaining access to victims in isolated networks.  "});index.add({'id':2,'href':'/geekdoc/projects/offensive-tor-toolkit/','title':"Offensive Tor Toolkit",'parent':"Projects",'content':"Offensive Tor Toolkit is a series of tools that simplify the use of Tor for typical exploitation and post-exploitation tasks.\nIn exploitation and post-exploitation phases, the victim needs to access Tor. All of this tools have an embedded instance of Tor and they are completely separated from each other. In this way, you only need to upload one file to the victim in order to run the required action.\nSome of this actions are described below. Click on them to see how it works:\n Reverse Shell: The victim connects to a Hidden Service hosted by the attacker. Bind Shell: The victim sets up a Hidden Service that offers a shell session. Local Port Forwarding: The victim routes TCP traffic from a Hidden Service to a port. Useful for accessing internal networks. Remote Port Forwarding: The victim routes TCP traffic from a port to a Hidden Service. Useful for accessing Tor from victims without internet access. Others.  Table of Contents:    Getting Started: First Steps in using Offensive Tor Toolkit     reverse-shell-over-tor: Reverse Shell to a Hidden Service.     hidden-bind-shell: Bind Shell as a Hidden Service.     hidden-portforwarding: Local Port Forwarding over Hidden Service.     tcp2tor-proxy: From TCP to Hidden Service.     "});index.add({'id':3,'href':'/geekdoc/projects/offensive-tor-toolkit/reverse-shell-over-tor/','title':"reverse-shell-over-tor",'parent':"Offensive Tor Toolkit",'content':"This tool allows the victim to connect to the Hidden Service of the attacker. If the attacker starts a netcat handler, it will give him a shell session.\nSome parameters need to be set:\n$ ./reverse-shell-over-tor -h Usage of reverse-shell-over-tor: -listener string Listener address. Format: \u0026lt;ONION_ADDR\u0026gt;:\u0026lt;PORT\u0026gt; -reverse-shell-program string Program to execute on reverse-shell (default \u0026quot;/bin/sh\u0026quot;) -timeout int Timeout in seconds for Tor setup (default 180) "});index.add({'id':4,'href':'/geekdoc/projects/offensive-tor-toolkit/hidden-bind-shell/','title':"hidden-bind-shell",'parent':"Offensive Tor Toolkit",'content':"This tool allows the victim to set up a new Hidden Service that offers shells to new connections. Then, the attacker can connect to the Hidden Service to receive a shell session.\nSome parameters need to be set:\n$ ./hidden-bind-shell -h Usage of hidden-bind-shell: -bind-shell-program string Program to execute on bind-shell (default \u0026quot;/bin/sh\u0026quot;) -data-dir string Where Tor data is stored. If not defined, a directory is created -hiddensrvport int Tor hidden service port where bind-shell will be started (default 80) -timeout int Timeout in seconds for Tor setup (default 180) "});index.add({'id':5,'href':'/geekdoc/projects/offensive-tor-toolkit/hidden-portforwarding/','title':"hidden-portforwarding",'parent':"Offensive Tor Toolkit",'content':"This tool allows the victim to set up a new Hidden Service that forwards TCP traffic to a TCP port. Then, the attacker can access the Hidden Service to access the target.\n If the target is a SOCKS proxy, the attacker can pivot easily through the victim to internal networks.\n Some parameters need to be set:\n$ ./hidden-portforwarding -h Usage of hidden-portforwarding: -data-dir string Where Tor data is stored. If not defined, a directory is created -forward string Where the hidden service should forward packets (local port forwarding). Format: \u0026lt;FW_IP\u0026gt;:\u0026lt;FW_PORT\u0026gt;. This parameter is required -hidden-port int Port for onion service (default 80) -timeout int Timeout in seconds for Tor setup (default 180) "});index.add({'id':6,'href':'/geekdoc/projects/offensive-tor-toolkit/tcp2tor-proxy/','title':"tcp2tor-proxy",'parent':"Offensive Tor Toolkit",'content':"This tool allows the victim to set up a service that forwards TCP traffic to a Hidden Service. Then, an victim inside an internal network can access a Hidden Service pivoting over the victim that executes this tool.\nSome parameters need to be set:\n$ ./tcp2tor-proxy -h Usage of tcp2tor-proxy: -listen string TCP Socket to listen on. Format: [\u0026lt;IP\u0026gt;]:\u0026lt;PORT\u0026gt; (default \u0026quot;127.0.0.1:60101\u0026quot;) -onion-forward string Hidden service to proxy. Format: \u0026lt;ONION\u0026gt;:\u0026lt;PORT\u0026gt;. This parameter is required -timeout int Timeout in seconds for Tor setup (default 180) "});index.add({'id':7,'href':'/geekdoc/','title':"",'parent':'','content':"Welcome to my personal blog! \nMy name is √Ålvaro Torres Cogollo and I work as a SysAdmin-DevOps Engineer and I am a passionate about cyber security and technology.\nThe aim of this site is to contribute to the Open Source Community in the following manner:\nProjects Here you will find some documentation about my personal projects. Click here for more info.\nWiki Here you will find some documentation about procedures and configurations of some software. Click here for more info.\nPosts Here is where you can find the documentation described above applied to real scenarios. Click here to access to post page.\n"});index.add({'id':8,'href':'/geekdoc/categories/','title':"Categories",'parent':"",'content':""});index.add({'id':9,'href':'/geekdoc/projects/','title':"Projects",'parent':"",'content':"Here you will find some documentation about my personal projects.\n   Offensive Tor Toolkit: Pentesting Tor utilities     Getting Started: First Steps in using Offensive Tor Toolkit     reverse-shell-over-tor: Reverse Shell to a Hidden Service.     hidden-bind-shell: Bind Shell as a Hidden Service.     hidden-portforwarding: Local Port Forwarding over Hidden Service.     tcp2tor-proxy: From TCP to Hidden Service.       "});index.add({'id':10,'href':'/geekdoc/tags/','title':"Tags",'parent':"",'content':""});index.add({'id':11,'href':'/geekdoc/wiki/','title':"Wiki",'parent':"",'content':"UNDER CONSTRUCTION\nHere you will find some documentation about procedures and configurations of some software.\n   "});})();